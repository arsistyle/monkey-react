@use 'sass:color';
@use 'sass:map';

$monkey-alerts: (
  types: (
    primary: true,
    secondary: true,
    tertiary: true,
    danger: true,
    success: true,
    warning: true,
    info: true,
    light: true,
    dark: true,
    gray: true,
    dark-gray: true
  )
);

.alert {
  $t: &;
  display: flex;
  align-items: center;
  gap: rem(20px);
  padding: rem(15px);
  border-radius: rem(4px);
  margin: rem(15px) 0;
  line-height: 1.2;
  transition: all ease 200ms;
  [data-ui-style='glassmorphism'] & {
    backdrop-filter: blur(2px);
    border: 2px solid rgba(#fff, 0.1);
  }
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  a {
    color: inherit;
  }
  &--hiding {
    opacity: 0;
    transform: translateY(10px);
  }
  &--small {
    padding: rem(8px) rem(12px);
  }
  &--inline {
    display: inline-flex;
    margin-top: 0;
  }

  &--actions {
    @include break(sm, max) {
      flex-wrap: wrap;
    }
  }

  &__icon {
    width: rem(30px);
    height: rem(30px);
    svg {
      width: 100%;
      height: 100%;
      fill: currentColor;
    }
  }

  &__content {
    margin-right: auto;
    > :first-child {
      margin-top: 0;
    }
  }

  &__actions {
    justify-self: flex-end;
    display: flex;
    justify-content: flex-end;
    gap: rem(10px);
    @include break(sm, max) {
      order: 10;
      width: 100%;
    }
  }

  &__close {
    align-self: flex-start;
    justify-self: flex-end;
    cursor: pointer;
  }

  &--md {
    #{$t}__icon {
      width: rem(45px);
      height: rem(45px);
    }
    #{$t}__info {
      font-size: rem(18px);
    }
  }
  &--lg {
    #{$t}__icon {
      width: rem(70px);
      height: rem(70px);
    }
    #{$t}__info {
      font-size: rem(20px);
    }
  }
  &--bold {
    #{$t}__info {
      font-weight: 600;
    }
  }
  @each $alertType, $key in map.get($monkey-alerts, 'types') {
    &--#{'' + $alertType} {
      background: color.mix(map.get($theme-colors, $alertType), #fff, 30%);
      color: color.mix(map.get($theme-colors, $alertType), #000, 50%);
      [data-ui-style='glassmorphism'] & {
        background: rgba(color.mix(map.get($theme-colors, $alertType), #fff, 30%), 0.9);
      }
      &#{$t}--text {
        color: #{map.get($theme-colors, $alertType)};
      }
    }
  }
  &--text {
    padding: 0;
    background: none;
  }
}
