@use 'sass:math';
@use 'sass:color';

// PX a REM
@function rem($size: 16px) {
  @return math.div($size, 16px) * 1rem;
}

// Get Deep values from map
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function pow($number, $exponent) {
  $value: 1;
  @if unitless($exponent) {
    @if $exponent > 0 {
      @for $i from 1 through $exponent {
        $value: $value * $number;
      }
    }
  }
  @return $value;
}

@function luminance($color) {
  $colors: (
    'red': red($color),
    'green': green($color),
    'blue': blue($color)
  );
  @each $name, $value in $colors {
    $adjusted: 0;
    $value: math.div($value, 255);
    @if $value < 0.03928 {
      $value: math.div($value, 12.92);
    } @else {
      $value: math.div(($value + 0.055), 1.055);
      $value: pow($value, 2);
    }
    $colors: map-merge(
      $colors,
      (
        $name: $value
      )
    );
  }
  @return (map-get($colors, 'red') * 0.2126)+ (
      map-get($colors, 'green') * 0.7152
    )+ (map-get($colors, 'blue') * 0.0722);
}

@function getColorContrast($color) {
  $contrast: #ffffff;
  @if (luminance($color) > 0.5) {
    $contrast: #111111;
  }
  @return $contrast;
}
